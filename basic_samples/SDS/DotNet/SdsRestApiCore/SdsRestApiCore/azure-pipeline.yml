variables:
- group: LocalServer
- name: projpath
  value: /basic_samples/SDS/DotNet/SdsRestApiCore/SdsRestApiCore
- name: CredFile
  value: appsettings.json
- name: CredFileLibrary
  value: prod_appsettings.json
- name: testpath
  value: /basic_samples/SDS/DotNet/SdsRestApiCore/SdsRestApiCoreTest
- name: job
  value: SDSDotNetAPI

jobs:      
- job: SDSDotNetAPI

  pool:
    vmImage: 'Ubuntu-16.04'
  steps :

    # Download Secure File
    # Download a secure file to a temporary location on the build or release agent
    - task: DownloadSecureFile@1
      inputs:
        secureFile: $(CredFileLibrary)


    # Copy Files basic_samples\OMF_API\CSharp\OMF_API
    # Copy files from source folder to target folder using match patterns (The match patterns will only match file paths, not folder paths)
    - task: CopyFiles@2
      inputs:
        sourceFolder: $(Agent.TempDirectory)
        contents: $(CredFileLibrary)
        targetFolder: '$(Build.SourcesDirectory)$(projpath)/'
        #cleanTargetFolder: false # Optional  
        overWrite: true # Optional
        #flattenFolders: false # Optional 
      displayName: copy file

    - script: |
        mv $(CredFileLibrary) $(CredFile)
      workingDirectory: $(Build.SourcesDirectory)$(projpath)/
      displayName: 'rename config file'     
      
    - script: |
        dotnet restore
        dotnet msbuild -p:HIGHENTROPYVA=true
        dotnet test
      workingDirectory: $(Build.SourcesDirectory)$(testpath)/
      displayName: 'Run Test'

      
- job: SDSDotNetAPI_Cov

  pool:
    name: 00-OSIManaged-Test
    demands: USERNAME -equals $(LocalServer)

  steps:
  - script: 'if not exist $(covFolder) mkdir $(covFolder)'
    workingDirectory: '$(Build.SourcesDirectory)$(projpath)'
    displayName: 'make dir '
    continueOnError: true

  - script: '"$(covPath)cov-build" --dir . --no-command --fs-capture-search ../ '
    workingDirectory: '$(Build.SourcesDirectory)$(projpath)/$(covFolder)'
    displayName: 'build '

  - script: '"$(covPath)cov-analyze" --dir . '
    workingDirectory: '$(Build.SourcesDirectory)$(projpath)/$(covFolder)'
    displayName: 'analyze '

  - script: '"$(covPath)cov-commit-defects" --stream "Engineering Incubation - $(job)" --host $(coverity_server) --https-port 8443 --auth-key-file "$(covAuthPath)" --dir . '
    workingDirectory: '$(Build.SourcesDirectory)$(projpath)/$(covFolder)'
    displayName: 'upload '

- job: SDSDotNetAPI_BS

  pool:
    name: Hosted VS2017

  steps:
  
    - script: |
        dotnet restore
        dotnet msbuild -p:HIGHENTROPYVA=true
      workingDirectory: $(Build.SourcesDirectory)$(projpath)
      displayName: 'Build'

    - task: ms-codeanalysis.vss-microsoft-security-code-analysis.build-task-binskim.BinSkim@3
      displayName: 'Run BinSkim '
      inputs:
        AnalyzeTarget: '$(Build.SourcesDirectory)\*.dll;$(Build.SourcesDirectory)\*.exe'
