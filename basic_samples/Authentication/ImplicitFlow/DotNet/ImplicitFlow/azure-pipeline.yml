variables:
- group: LocalServer
- name: projpath
  value: /basic_samples/Authentication/ImplicitFlow/DotNet/ImplicitFlow
- name: CredFileTestOnly
  value: appsettings.json
- name: CredFile
  value: config.js
- name: CredFileTestOnlyLibrary
  value: Implicit_test_appsettings.json
- name: CredFileLibrary
  value: Implicit_config.js
- name: testpath
  value: /basic_samples/Authentication/ImplicitFlow/DotNet/ImplicitFlowTest
- name: job
  value: Auth_Implicit

jobs:      
- job: Auth_Implicit_DotNet

  pool:
    vmImage: 'vs2017-win2016'
  steps :

    # Download Secure File
    # Download a secure file to a temporary location on the build or release agent
    - task: DownloadSecureFile@1
      inputs:
        secureFile: $(CredFileTestOnlyLibrary)

    # Download Secure File
    # Download a secure file to a temporary location on the build or release agent
    - task: DownloadSecureFile@1
      inputs:
        secureFile: $(CredFileLibrary)

    # Copy Files
    # Copy files from source folder to target folder using match patterns (The match patterns will only match file paths, not folder paths)
    - task: CopyFiles@2
      inputs:
        sourceFolder: $(Agent.TempDirectory)
        contents: $(CredFileTestOnlyLibrary)
        targetFolder: '$(Build.SourcesDirectory)$(testpath)/'
        #cleanTargetFolder: false # Optional  
        overWrite: true # Optional
        #flattenFolders: false # Optional 
      displayName: copy file
      
    # Copy Files
    # Copy files from source folder to target folder using match patterns (The match patterns will only match file paths, not folder paths)
    - task: CopyFiles@2
      inputs:
        sourceFolder: $(Agent.TempDirectory)
        contents: $(CredFileLibrary)
        targetFolder: '$(Build.SourcesDirectory)$(projpath)/wwwroot'
        #cleanTargetFolder: false # Optional  
        overWrite: true # Optional
        #flattenFolders: false # Optional 
      displayName: copy file

    - script: |
        del $(CredFileTestOnly)
      workingDirectory: $(Build.SourcesDirectory)$(testpath)/
      displayName: 'rename config file'        

    - script: |
        del $(CredFile)
      workingDirectory: $(Build.SourcesDirectory)$(projpath)/wwwroot
      displayName: 'rename config file'     

    - script: |
        rename $(CredFileTestOnlyLibrary) $(CredFileTestOnly)
      workingDirectory: $(Build.SourcesDirectory)$(testpath)/
      displayName: 'rename config file'        

    - script: |
        rename $(CredFileLibrary) $(CredFile)
      workingDirectory: $(Build.SourcesDirectory)$(projpath)/wwwroot
      displayName: 'rename config file'       
      
    - script: |
        dotnet restore
        dotnet msbuild -p:HIGHENTROPYVA=true
        start /B dotnet run
      workingDirectory: $(Build.SourcesDirectory)$(projpath)
      displayName: 'Run Test'  
      
    - script: |
        dotnet restore
        dotnet test
      workingDirectory: $(Build.SourcesDirectory)$(testpath)/
      displayName: 'Run Test' 
