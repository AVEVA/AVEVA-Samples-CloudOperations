trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    include:
      - '/basic_samples/Authentication/AuthorizationCodeFlow/JavaScript'

pr:
  branches:
    include:
      - master
  paths:
    include:
      - '/basic_samples/Authentication/AuthorizationCodeFlow/JavaScript'

schedules:
  - cron: '0 0 * * 0'
    displayName: Weekly build
    branches:
      include:
        - master
    always: true

variables:
  - template: '/miscellaneous/build_templates/variables.yml'
  - name: projPath
    value: '/basic_samples/Authentication/AuthorizationCodeFlow/JavaScript'
  - name: CredFile
    value: config.js
  - name: CredFileLibrary
    value: product-readiness.auth_pkce_javascript.js
  - name: analysisProject
    value: Auth_PKCE_JavaScript

jobs:
  - job: Tests
    strategy:
      matrix:
        linux:
          imageName: ubuntu-latest
        windows:
          imageName: windows-latest
    pool:
      vmImage: $(imageName)
    steps:
      # Issue in windows-latest template, see:
      # https://developercommunity.visualstudio.com/content/problem/1170486/selenium-ui-test-can-no-longer-find-chrome-binary.html
      - script: |
          if not exist "C:\Program Files (x86)\Google" mkdir "C:\Program Files (x86)\Google"
          if not exist "C:\Program Files (x86)\Google\Chrome" mkdir "C:\Program Files (x86)\Google\Chrome"
          mklink /D "C:\Program Files (x86)\Google\Chrome\Application" "C:\Program Files\Google\Chrome\Application"
        displayName: Set Chrome Path
        condition: eq(variables['imageName'],'windows-latest')

      - template: '/miscellaneous/build_templates/config.yml'
        parameters:
          fileOriginal: $(CredFile)
          fileLibrary: $(CredFileLibrary)
          filePath: $(projPath)/src

      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
        displayName: 'Specify Node version'

      - bash: npm ci
        workingDirectory: $(Build.SourcesDirectory)$(projPath)
        displayName: 'Install dependencies'

      - bash: npm start &
        workingDirectory: $(Build.SourcesDirectory)$(projPath)
        displayName: 'Run app'

      - bash: npm test
        workingDirectory: $(Build.SourcesDirectory)$(projPath)/
        displayName: 'Run tests'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: '*.xml'
          failTaskOnFailedTests: true
          searchFolder: '$(Build.SourcesDirectory)$(projPath)/TestResults'
          testRunTitle: '$(Agent.JobName) on $(imageName)'
        displayName: 'Publish test results'
        condition: always()

  - template: '/miscellaneous/build_templates/analysis.yml'
    parameters:
      language: nodejs
