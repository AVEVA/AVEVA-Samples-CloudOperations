using AuthorizationCodeFlow;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using System;
using System.Threading;

namespace AuthorizationCodeFlowTest
{
    public class OpenTestBrowser : IOpenBrowser
    {
        public void OpenBrowser(string url, string userName, string password)
        {
            // Automatic login works against Microsoft personal account option only
            // Must use Live account email that isn't also an AAD account
            // Account must have no 2FA enabled and the login flow must not have any other additional prompts after password entry
            ChromeOptions options = new ChromeOptions();
            options.AddArgument("--allow-insecure-localhost");
            using (IWebDriver driver = new ChromeDriver(Environment.ExpandEnvironmentVariables("%ChromeWebDriver%"), options))
            {
                driver.Url = url;
                int sleep = 6000;

                Thread.Sleep(sleep);

                driver.FindElement(By.XPath("descendant::a[@title=\"Personal Account\"]")).Click();

                Thread.Sleep(sleep);

                driver.FindElement(By.XPath("//*[@id=\"i0116\"]")).SendKeys(userName);
                driver.FindElement(By.XPath("//*[@id=\"idSIButton9\"]")).Click();

                Thread.Sleep(sleep);

                driver.FindElement(By.XPath("//*[@id=\"i0118\"]")).SendKeys(password);
                driver.FindElement(By.XPath("//*[@id=\"idSIButton9\"]")).Click();

                Thread.Sleep(sleep);

                driver.Close();
            }
        }
    }
}
