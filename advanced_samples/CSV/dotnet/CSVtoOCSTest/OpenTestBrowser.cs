namespace CSVtoOCSTest
{
    using System;
    using System.Threading;
    using CSVtoOCS;
    using OpenQA.Selenium;
    using OpenQA.Selenium.Chrome;

    /// <summary>
    /// Allows for automated testing.
    /// </summary>
    public class OpenTestBrowser : IOpenBrowser
    {
        /// <summary>
        /// Creates Open Browswer.
        /// </summary>
        /// <param name="uri"> The URI to use. </param>
        /// <param name="userName"> The username to use.</param>
        /// <param name="password"> The password to use.</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1303:Do not pass literals as localized parameters", Justification = "sample")]
        public void OpenBrowser(Uri uri, string userName, string password)
        {
            if (uri == null)
            {
                throw new NullReferenceException("uri is null");
            }

            this.OpenBrowser(uri.AbsolutePath, userName, password);
        }

        /// <summary>
        /// Creates Open Browswer.
        /// </summary>
        /// <param name="url"> The URI to use. </param>
        /// <param name="userName"> The username to use.</param>
        /// <param name="password"> The password to use.</param>
        public void OpenBrowser(string url, string userName, string password)
        {
            // Automatic login works against Microsoft personal account option only
            // Must use Live account email that isn't also an AAD account
            // Account must have no 2FA enabled and the login flow must not have any other additional prompts after password entry
            ChromeOptions options = new ChromeOptions();
            options.AddArgument("--allow-insecure-localhost");
            using (IWebDriver driver = new ChromeDriver(Environment.ExpandEnvironmentVariables("%ChromeWebDriver%"), options))
            {
                driver.Url = url;
                int sleep = 6000;

                Thread.Sleep(sleep);

                driver.FindElement(By.XPath("descendant::a[@title=\"Personal Account\"]")).Click();

                Thread.Sleep(sleep);

                driver.FindElement(By.XPath("//*[@id=\"i0116\"]")).SendKeys(userName);
                driver.FindElement(By.XPath("//*[@id=\"idSIButton9\"]")).Click();

                Thread.Sleep(sleep);

                driver.FindElement(By.XPath("//*[@id=\"i0118\"]")).SendKeys(password);
                driver.FindElement(By.XPath("//*[@id=\"idSIButton9\"]")).Click();

                Thread.Sleep(sleep);

                driver.Close();
            }
        }
    }
}
